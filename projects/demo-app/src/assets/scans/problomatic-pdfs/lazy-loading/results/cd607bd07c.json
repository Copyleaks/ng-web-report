{"statistics":{"identical":110,"minorChanges":0,"relatedMeaning":0},"text":{"comparison":{"identical":{"source":{"chars":{"starts":[50479,55845,55935,56292,58449,62855,74166,77595,79493,80117],"lengths":[21,17,15,23,19,31,21,23,21,19]},"words":{"starts":[8314,9421,9442,9545,10078,11035,13660,14573,15073,15150],"lengths":[10,8,7,11,9,15,10,11,10,9]}},"suspected":{"chars":{"starts":[2226,2398,2416,2434,2489,2671,2864,2968,3061,3152],"lengths":[21,17,15,23,19,31,21,23,21,19]},"words":{"starts":[351,410,419,428,446,509,567,612,648,677],"lengths":[10,8,7,11,9,15,10,11,10,9]}}},"minorChanges":{"source":{"chars":{"starts":[],"lengths":[]},"words":{"starts":[],"lengths":[]}},"suspected":{"chars":{"starts":[],"lengths":[]},"words":{"starts":[],"lengths":[]}}},"relatedMeaning":{"source":{"chars":{"starts":[],"lengths":[]},"words":{"starts":[],"lengths":[]}},"suspected":{"chars":{"starts":[],"lengths":[]},"words":{"starts":[],"lengths":[]}}}},"value":"arXiv:1611.05673v1 [math.NA] 17 Nov 2016\n\nShape Optimization Using the\nCut Finite Element Method∗\nErik Burman† Daniel Elfverson‡ Peter Hansbo§\nMats G. Larson¶ Karl Larssonk\nNovember 18, 2016\n\nAbstract\nWe present a cut finite element method for shape optimization in the case of\nlinear elasticity. The elastic domain is defined by a level-set function, and the\nevolution of the domain is obtained by moving the level-set along a velocity field\nusing a transport equation. The velocity field is the largest decreasing direction\nof the shape derivative that satisfies a certain regularity requirement and the computation of the shape derivative is based on a volume formulation. Using the cut\nfinite element method no re–meshing is required when updating the domain and\nwe may also use higher order finite element approximations. To obtain a stable\nmethod, stabilization terms are added in the vicinity of the cut elements at the\nboundary, which provides control of the variation of the solution in the vicinity of\nthe boundary. We implement and illustrate the performance of the method in the\ntwo–dimensional case, considering both triangular and quadrilateral meshes as well\nas finite element spaces of different order.\n\n∗\nThis research was supported in part by the Swedish Foundation for Strategic Research Grant No.\nAM13-0029, the Swedish Research Council Grants Nos. 2011-4992, 2013-4708, the Swedish Research\nProgramme Essence, and EPSRC, UK, Grant Nr. EP/J002313/1.\n†\nDepartment of Mathematics, University College London, Gower Street, London WC1E 6BT, UK,\ne.burman@ucl.ac.uk\n‡\nDepartment of Mathematics and Mathematical Statistics, Umeå University, SE–901 87 Umeå, Sweden, daniel.elfverson@umu.se\n§\nDepartment of Mechanical Engineering, Jönköping University, SE-551 11 Jönköping, Sweden, peter.hansbo@ju.se\n¶\nDepartment of Mathematics and Mathematical Statistics, Umeå University, SE–901 87 Umeå, Sweden, mats.larson@umu.se\nk\nDepartment of Mathematics and Mathematical Statistics, Umeå University, SE–901 87 Umeå, Sweden, karl.larsson@umu.se\n\n1\n\nContents\n1 Introduction\n\n3\n\n2 Model Problem\n2.1 Linear Elasticity . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n2.2 Minimization Problem . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n4\n4\n5\n\n3 Cut Finite Element Method\n3.1 The Mesh and Finite Element Spaces . . . . . . . . . . . . . . . . . . . .\n3.2 The Method . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n3.3 Geometry Description . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n6\n6\n7\n11\n\n4 Shape Calculus\n4.1 Definition of the Shape Derivative . . . . . . . . . . . . . . . . . . . . . .\n4.2 Shape Derivative . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n4.3 Finite Element Approximation of the Shape Derivative . . . . . . . . . .\n\n11\n11\n12\n14\n\n5 Domain Evolution\n5.1 Reinitialization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n5.2 Shape Evolution . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n5.3 Optimization Algorithm . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n14\n14\n15\n16\n\n6 Numerical Results\n6.1 Model Problems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n6.2 Implementation Aspects . . . . . . . . . . . . . . . . . . . . . . . . . . .\n6.3 Numerical Experiments . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n16\n16\n17\n17\n\n7 Conclusions\n\n23\n\n2\n\n1\n\nIntroduction\n\nOptimization of elastic structures is an important and active research field of significant interest in engineering. There are two common approaches to represent the domain\nwhich we seek to optimize: (i) A density function. This approach, common in topology\noptimizaton [3,7], is very general and computationally convenient, but the boundary representation is not sharp and thus typically fine grids and low order approximation spaces\nare employed. (ii) An implicit or explicit representation of the boundary. This approach\nis common in shape optimization [15] where the boundary is typically described by a\nlevel-set function or a parametrization, but topological changes can also be handled for\ninstance using an implicit level-set representation of the boundary. Given the boundary\nrepresentation we need to generate a discretization of the domain when it is updated.\nThis can be done using a standard meshing approach based on mesh motion and/or\nre-meshing or alternatively using a fictitious domain method, see [2, 14, 16] for different\napproaches.\nIn this contribution we focus on the fictitious domain approach using the recently\ndeveloped cut finite element method CutFEM [4, 6], extending our previous work on the\nBernoulli free boundary value problem [5] to linear elasticity. The key components in\nCutFEM are: (i) Use of a fixed background mesh and a sharp boundary representation\nthat is allowed to cut through the background mesh in arbitrary fashion. (ii) Weak\nenforcement of the boundary conditions. (iii) Stabilization of the cut elements in the\nvicinity of the boundary using a consistent stabilization term which leads to optimal\norder accuracy and conditioning of the resulting algebraic system of equations. CutFEM\nalso allows higher order finite element spaces and rests on a solid theoretical foundation\nincluding stability bounds, optimal order a priori error bounds, and optimal order bounds\nfor the condition numbers of the stiffness and mass matrices, see [4] and the references\ntherein.\nIn order to support large changes in the shape and topology of the domain during the\noptimization process we employ a level-set representation of the boundary. The evolution\nof the domain is obtained by moving the level-set along a velocity field using a HamiltonJacobi transport equation, see [1, 2]. The velocity field is the largest decreasing direction\nof the shape derivative that satisfies a certain regularity requirement together with a\nboundary conditions on the boundary of the design volume. The computation of the\nshape derivative is based on a volume formulation, see [11, 12] for similar approaches.\nIn this context CutFEM provides an accurate and stable approximation of the linear\nelasticity equations which completely avoids the use of standard meshing procedures when\nupdating the domain. In this contribution we focus on standard Lagrange elements, but\na wide range of elements may be used in CutFEM, including discontinuous elements,\nisogeometric elements with higher order regularity, and mixed elements.\nWhen using a higher order finite element space in shape optimization we use a finer\nrepresentation of the domain than the computational mesh, i.e., the level-set representing\nthe geometry is defined on a finer mesh. For computational convenience and efficiency\nwe use a piecewise linear geometry description on the finer grid. This approach of course\nleads to loss of optimal order but the main purpose of using the finer grid is to allow the\n3\n\ndomain to move more freely on the refined grid despite using larger higher order elements\nfor the approximation of the solution field. If necessary, once a steady design has been\nfound, a more accurate final computation can be done which uses a higher order geometry\ndescription. Our approach leads to a convenient and efficient implementation since the\nsolution to the elasticity equations and the level-set function are represented using the\nfixed background mesh and a uniform refinement thereof.\nAn outline of the paper is as follows: in Section 2 we formulate the equations of\nlinear elasticity and the optimization problem, in Section 3 we formulate the CutFEM, in\nSection 4 we recall the necessary results from shape calculus, in Section 5 we formulate\nthe transport equation for the level-set and the optimization algorithm, and finally in\nSection 6 we present numerical results.\n\n2\n\nModel Problem\n\n2.1\n\nLinear Elasticity\n\nLet Ω ∈ Rd , for d = 2, 3, be a bounded domain with boundary ∂Ω = ΓD ∪ ΓN such that\nΓD ∩ ΓN = ∅, and let n be the exterior unit normal to ∂Ω. Assuming a linear elastic\nisotropic material the constitutive relationship between the symmetric stress tensor σ and\nthe strain tensor \u000f is given by Hooke’s law\nσ = 2μ\u000f + λ tr(\u000f)I\n\n(2.1)\n\nwhere μ and λ are the Lamé parameters and I is the d×d identity matrix. Also, assuming\nsmall strains we may use the linear strain tensor \u000f(u) = (∇u + ∇uT )/2, where u is the\ndisplacement field, as a strain measure. In this expression for \u000f(u) we take the gradient\nof vector fields which we define as ∇u = u ⊗ ∇, i.e. the Jacobian of u. Under these\nassumptions the governing equations for the stress σ and displacements u of an elastic\nbody in equilibrium are\n− Div σ = f\nσ = 2μ\u000f(u) + λ tr(\u000f(u))I\nu=0\nσ·n=g\n\nin Ω\nin Ω\non ΓD\non ΓN\n\n(2.2)\n(2.3)\n(2.4)\n(2.5)\n\nwhere Div σ is the row-wise divergence on σ and f and g are given body and surface force\ndensities, respectively.\nIn shape optimization we seek to minimize some objective functional J(Ω; u(Ω)) with\nrespect to the domain Ω where u(Ω) is the displacement field obtained by solving (2.2)–\n(2.5). For the present work we choose to minimize the compliance, i.e. the internal energy\nof the elastic body, and for clarity of presentation we also choose f = 0.\n\n4\n\nWeak Form. The weak form of the problem (2.2)–(2.5) reads: find u ∈ V (Ω) = {u ∈\n[H 1 (Ω)]d : u|ΓD = 0} such that\n∀q ∈ V (Ω)\n\na(Ω; u, q) = L(q)\n\n(2.6)\n\nwith bilinear form a(Ω; ·, ·) and linear functional L(·) given by\na(Ω; v, q) = 2μ(\u000f(v), \u000f(q))L2 (Ω) + λ(∇ · v, ∇ · q)L2 (Ω)\nL(q) = (g, q)L2 (ΓN )\n\n(2.7)\n(2.8)\n\nwhere (·, ·)L2 (Ω) denotes the usual L2 (Ω) inner product.R Specifically, for tensors A, B :\nΩ → Rd×d the L2 (Ω) inner product is (A, B)L2 (Ω) = Ω A : B where the contraction\nP\noperator ”:” is defined A : B = di,j=1 Aij Bij and we recall that tr(\u000f(v)) = I : \u000f(v) = ∇·v.\nNote that by choosing f = 0 and ΓN fixed the linear functional L is independent of Ω.\n\n2.2\n\nMinimization Problem\n\nGiven some functional J(Ω; v) where Ω ⊂ Ω0 is a domain and v ∈ V (Ω) we define the\nobjective functional\nJ(Ω) = J(Ω; u(Ω))\n(2.9)\nwhere u(Ω) ∈ V (Ω) is the solution to (2.6). Letting O denote the set of all admissible\ndomains we formulate the minimization problem: find Ωmin ∈ O such that\nJ(Ωmin ) = min J(Ω)\nΩ∈O\n\n(2.10)\n\nLagrangian Formulation. The minimization problem can also be expressed as finding\nan extreme point (Ωmin ; u(Ωmin ), p(Ωmin )) to the Lagrangian\nL(Ω; v, q) = J(Ω; v) − a(Ω; v, q) + L(q)\n\n(2.11)\n\nand we note that J(Ω; v) = L(Ω; v, q) for all q ∈ V and Ω ∈ O by (2.6). For a fixed\ndomain Ω, the saddle point (u, p) fulfilling\nL(Ω; u, p) = inf sup L(Ω; v, q)\n\n(2.12)\n\nv∈V q∈V\n\ncan be determined by the problems: find u ∈ V (Ω) and p ∈ V (Ω) such that\nh∂q L(Ω; u, p), δqi = 0\nh∂v L(Ω; u, p), δvi = 0\n\n∀δq ∈ V (Ω)\n∀δv ∈ V (Ω)\n\n(2.13)\n(2.14)\n\nwhere h∂q L(Ω, u, p), δqi denotes the partial derivative of L with respect to q in the direction of δq, cf. [2]. From (2.13) we can derive the primal problem (2.6); thus u is the\nsolution to (2.6), and from (2.14) we deduce that p is the solution to the following dual\nproblem: find p ∈ V (Ω) such that\na(Ω; v, p) = h∂v J(Ω, u), vi ∀v ∈ V (Ω)\n5\n\n(2.15)\n\nRecalling that J(Ω; v) = L(Ω; v, q) we can thus express the objective functional (2.9)\nin terms of the Lagrangian as\nJ(Ω) = L(Ω; u(Ω), p(Ω)) = inf\n\nsup L(Ω; v, q)\n\n(2.16)\n\nv∈V (Ω) q∈V (Ω)\n\nwhere u(Ω) ∈ V (Ω) and p(Ω) ∈ V (Ω) are the solutions to\na(Ω; u(Ω), v) = L(v)\na(Ω; v, p(Ω)) = h∂v J(Ω; u(Ω)), vi\n\n∀v ∈ V (Ω)\n∀v ∈ V (Ω)\n\n(2.17)\n(2.18)\n\ni.e., the solutions to the primal and dual problem, respectively.\nObjective Functional. In the present work we choose to minimize the compliance,\ni.e. the elastic energy, which is given by\n1\na(Ω; u(Ω), u(Ω))\n2\n\n(2.19)\n\nwhere u(Ω) is the solution to (2.6). Since we also want to constrain the volume |Ω| we\nform the functional J(·; ·) as the sum of the compliance and a penalty term\n1\nJ(Ω; v) = a(Ω; v, v) + κ|Ω|\n2\n\n(2.20)\n\nwhere κ acts as a material cost which we in the present work keep fixed. For this choice\nof objective functional the dual problem (2.15) coincides with the primal problem (2.6)\nsince h∂v J(Ω; u), vi = L(v) and the bilinear form is symmetric, and hence p = u.\nRemark 2.1. If a fixed amount of material is desired, i.e., |Ω| = γ|Ω0 | for some fixed\n0 < γ < 1, it is possible to determine κ by some adaptive update strategy of the material\ncost κ.\nRemark 2.2. When considering other functionals J(Ω; v), typically u 6= p and the dual\nproblem (2.15) must be computed.\n\n3\n\nCut Finite Element Method\n\nWe will use a cut finite element method to solve the primal (and dual) equation (2.6).\nAn analysis of this method for linear elasticity is presented in [10].\n\n3.1\n\nThe Mesh and Finite Element Spaces\n\nConsider a fixed polygonal domain Ω0 , with Ω ⊂ Ω0 as illustrated in Figure 1a, and let\nKh,0 = {K} and Fh,0 = {F }\n6\n\n(3.1)\n\ndenote a subdivision of Ω0 into a family of quasi-uniform triangles/tetrahedrons or a\nuniform quadrilaterals/bricks with mesh parameter h ∈ (0, h0 ], illustrated in Figure 1b,\nrespectively the set of interior faces in Kh,0 . Let Pk be the space of full polynomials in\nRd up to degree k on triangular/tetrahedral elements and tensor products of polynomials\nup to degree k on quadrilateral/brick elements. We define the finite element space of\ncontinuous piecewise polynomial functions on Kh,0 by\nVh,k,0 = {v ∈ V (Ω0 ) ∩ [C 0 (Ω0 )]d : v|K ∈ [Pk (K)]d , K ∈ Kh,0 }\n\n(3.2)\n\nThe active part of the mesh is given by all elements in Kh,0 which has a non-zero intersection with the domain Ω. We define the active mesh and its interior faces\nKh = {K ∈ Kh,0 : K ∩ Ω 6= ∅} and Fh = {F ∈ Fh,0 : F ∩ Ω 6= ∅}\n\n(3.3)\n\nthe union of all active elements\nΩh = ∪K∈Kh K\n\n(3.4)\n\nillustrated in Figure 1c, and the finite element space on the active mesh\nVh,k (Ωh ) = Vh,k,0 |Ωh\n\n(3.5)\n\nWe also define the sets of all elements that are cut by ΓD and ΓN , respectively\nΩh,D = {∪K : K ∩ ΓD 6= ∅, K ∈ Kh }\n\nΩh,N = {∪K : K ∩ ΓN 6= ∅, K ∈ Kh }\n\n(3.6)\n(3.7)\n\nand the sets of interior faces belonging to elements in Kh that are cut by ΓD respectively\ncut by ΓN but not by ΓD\nFh,D = {F ∈ Fh : F ∩ Ωh,D 6= ∅}\n\nFh,N = {F ∈ Fh \\ Fh,D : F ∩ Ωh,N 6= ∅}\n\n(3.8)\n(3.9)\n\nwhich are illustrated in Figure 1d. Note that Fh,D ∩ Fh,N = ∅. For each face F ∈ Fh we\nchoose to denote one of the two elements sharing F by K+ and the other element by K− .\nWe thus have F = K + ∩ K − and we define the face normal nF = n∂K+ and the jump\nover the face\nJvK = v|K+ − v|K−\n\n3.2\n\n(3.10)\n\nThe Method\n\nFollowing the procedure in [10] we introduce the stabilized bilinear form\nah (Ω; u, v) = a(Ω; u, v) + sh (Fh,D ; u, v) + h2 sh (Fh,N ; u, v)\n\n7\n\n(3.11)\n\nΩ0\n\nKh,0\n\nΩ\nΓD\n\nΓN\n\n(a) Domain and boundaries\n\n(b) Background grid\n\nFh,D\n\nΩh\n\n(c) Domain of active elements Kh\n\nFh,N\n\n(d) Sets of faces\n\nFigure 1: Illustration of notation for meshes and faces.\n\n8\n\n(a) Triangles\n\n(b) Quadrilaterals\n\nFigure 2: P3 Lagrange elements and the corresponding mesh for a P1 -iso-P3 finite element\nspace consisting of P1 Lagrange elements with vertices at the positions of the P3 Lagrange\nnodes.\n\nThe stabilization form sh is given by\nsh (F; u, v) =\n\nk\nXX\nF ∈F j=1\n\nγj h2j−1 (J∂nj F uK, J∂nj F vK)L2 (F )\n\n(3.12)\n\nwhere ∂nj F denotes the j:th derivative in the direction of the face normal nF and {γj }kj=1\nare positive parameters. We also introduce the stabilized Nitsche form\nAh (Ω; u, v) = ah (Ω; u, v) − (σ(u) · n, v)L2 (ΓD ) − (u, σ(v) · n)L2 (ΓD )\n\u0001\n+ γD h−1 2μ(u, v)L2 (ΓD ) + λ(u · n, v · n)L2 (ΓD )\n\n(3.13)\n\nwhere the additional terms give the weak enforcement of the Dirichlet boundary conditions via Nitsche’s method [13] and γD > 0 is a parameter.\nThe cut finite element method for linear elasticity can now be formulated as the\nfollowing problem: find uh ∈ Vh,k (Ωh ) such that\nAh (Ω; uh , v) = L(v)\n\n∀v ∈ Vh,k (Ωh )\n\n(3.14)\n\nTheoretical Results. To summarize the the main theoretical results from [10] the cut\nfinite element method for linear elasticity has the following properties:\n• The stabilized form ah enjoys the same coercivity and continuity properties with\nrespect to the proper norms on Ωh as the standard form a on Ω equipped with a\nfitted mesh.\n• Optimal order approximation holds in the relevant norms since there is a stable\ninterpolation operator with an extension operator that in a H s stable way extends\na function from Ω to a neighborhood of Ω containing Ωh .\nUsing these results a priori error estimates of optimal order can be derived using standard\ntechniques of finite element analysis.\n\n9\n\n-\n\n--\n\n+\n+-\n\n+\n++\n\n+\n\n(a) Triangles\n\n-\n\n- -\n\n-\n\n- -\n\n- -\n\n+ +\n\n+ +\n\n+\n\n+ -\n\n+ -\n\n+ +\n\n+\n\n(b) Quadrilaterals\nFigure 3: Cases of extracting piecewise linear geometry from a level-set on an element\nK ∈ Kh/k,0 with the signs of the level-set at the vertices as indicated.\n\n(a) P1 -iso-P2 level-set\n\n(b) P1 -iso-P2 geometry\n\n(c) P1 -iso-P2 level-set\n\n(d) P1 -iso-P2 geometry\n\nFigure 4: Piecewise linear geometry represented by a discrete level-set using P1 -iso-Pk\nfinite elements.\n\n10\n\n3.3\n\nGeometry Description\n\nLet the geometry be described via a level-set function φ(x) : Ω0 → R where the domain\nΩ and the domain boundary ∂Ω are given by\nΩ = { x ∈ Ω0 : φ(x) > 0 }\n\n∂Ω = { x ∈ Ω0 : φ(x) = 0 }\n\nand\n\n(3.15)\n\nFor convenience we use P1 finite elements for the level-set representation. However, as we\nuse Pk finite elements to approximate the solution, we improve the geometry representation when using higher order finite elements (k ≥ 2) by letting the level-set be defined\non a refined mesh. The refined mesh Kh/k,0 is constructed by uniform refinement of Kh,0\nsuch that the Lagrange nodes of a Pk finite element in Kh,0 coincides with the vertices\nof Kh/k,0 , as illustrated in Figure 2. The finite element space of the level-set is the scalar\nvalued so called P1 -iso-Pk finite element space on Kh,0 , defined as\nWh/k = {v ∈ H 1 (Ω0 ) ∩ C 0 (Ω0 ) : v|K ∈ P1 (K), K ∈ Kh/k,0 }\n\n(3.16)\n\nGeometry Extraction. We extract the domain Ω from the level-set function φ ∈ Wh/k\nby traversing all elements in Kh/k,0 and checking the value and sign of φ in the element\nvertices to derive the intersection between the element and the domain. This procedure\nresults in a number of simple cases which we for triangles and quadrilaterals illustrate in\nFigure 3. Note that in the case of quadrilaterals the boundary intersection ∂Ω ∩ K where\nK ∈ Kh/k,0 is actually not a linear function as bilinear basis functions include a quadratic\ncross term, but we employ linear interpolation between detected edge intersections to\nproduce the P1 boundary illustrated. Example geometry extractions from P1 -iso-P2 levelsets on triangles and quadrilaterals are shown in Figure 4.\nQuadrature. As the possible geometry intersections with elements in the refined mesh\nKh/k,0 consists of a small number of cases, as illustrated in Figure 3, we construct quadrature rules for exact integration of products of Pk polynomials for each case.\n\n4\n\nShape Calculus\n\n4.1\n\nDefinition of the Shape Derivative\n\nFor Ω ∈ O we let W(Ω, Rd ) denote the space of sufficiently smooth vector fields on Ω\nand for a vector field θ ∈ W we define the mapping\nMθ : Ω × I 3 (x, t) 7→ x + tθ(x) ∈ Mθ (Ω, t) ⊂ Rd\n\n(4.1)\n\nwhere I = (−δ, δ), δ > 0. This mapping is illustrated in Figure 5. For small enough δ,\nthe mapping Ω 7→ Mθ (Ω, t) is a bijection and Mθ (Ω, 0) = Ω. We also assume that the\nvector field θ is such that Mθ (Ω, t) ∈ O for t ∈ I with δ small enough.\n\n11\n\nMθ (Ω, t)\nΩ\n\nFigure 5: Illustration of the mapping Mθ (Ω, t).\n\nLet J(Ω) be a shape functional, i.e. a mapping J : O 3 Ω 7→ J(Ω) ∈ R. We then\nhave the composition I 3 t 7→ J ◦ M(Ω, t) ∈ R and we define the shape derivative DΩ,θ\nof J in the direction θ by\nDΩ,θ J(Ω) =\n\nJ(Mθ (Ω, t)) − J(Ω)\nd\nJ ◦ Mθ (Ω, t)|t=0 = lim\nt→0\ndt\nt\n\n(4.2)\n\nNote that if Mθ (Ω, t) = Ω we have DΩ,θ J = 0, even if Mθ (ω, t) 6= ω for a proper subspace\nω ⊂ Ω. We finally define the shape derivative DΩ J : W (Ω, Rd ) → R by\nDΩ J(θ) = DΩ,θ J(Ω)\n\n(4.3)\n\nIf the functional J depends on other arguments we use ∂Ω to denote the partial derivative\nwith respect to Ω and ∂Ω,θ to denote the partial derivative with respect to Ω in the\ndirection θ.\nFor f : Ω × I → Rd we also define the material time derivative in the direction θ by\nf (Mθ (x, t), t) − f (x, 0)\nt→0\nt\n\nDt,θ f = lim\nand recall the identity\n\nZ\n∂Ω,θ\n\nZ\nf=\n\nΩ\n\nΩ\n\nDt,θ f + (∇ · θ)f\n\n(4.4)\n\n(4.5)\n\nsee for example [5].\n\n4.2\n\nShape Derivative\n\nWe want to take the derivative of the inf-sup formulation of the objective function (2.16)\nwith respect to the domain. The Correa–Seeger theorem [8] or [9] states that for q, v ∈\nV (Ω) we have\nDΩ J(θ) = ∂Ω,θ L(Ω; q, v)|v=u(Ω),q=p(Ω)\n(4.6)\nwhere u(Ω) is the primal solution (2.6), and p(Ω) is the dual solution (2.15). For the\nspecial case when u(Ω) = p(Ω) we have\nDΩ J(θ) = ∂Ω,θ L(Ω; v, v)|v=u(Ω)\n\n(4.7)\n\nFor notational simplicity we below omit the dependency on Ω, i.e., u = u(Ω) and p = p(Ω).\n12\n\nTheorem 4.1. The shape derivative of the compliance objective functional J(Ω) =\nL(Ω; u, u) defined via (2.20) is given by\nZ\n2μ(\u000fθ (u) : \u000f(u)) + λtr(\u000fθ (u))tr(\u000f(u))\n(4.8)\nDΩ,θ J(θ) =\nΩ\n\u0010\n\u0011\n1\n+ (∇ · θ) κ − μ(\u000f(u) : \u000f(u)) − λ tr(\u000f(u))2\n2\nwhere \u000fθ (u) is defined as\n\u000fθ (u) =\n\n\u0001\n1\n∇u∇θ + ∇θT ∇uT\n2\n\n(4.9)\n\nProof. We have\n\u0012\n\u0013\n1\n∂Ω,θ L(Ω; v, v) = ∂Ω,θ κ|Ω| − a(Ω; v, v)\n2\n\n(4.10)\n\nfrom (2.11) and (2.20) and by (4.5) we obtain\n\u0012\n\u0013\nZ\n1\n1\n∂Ω,θ L κ|Ω| − a(v, v) = ∂Ω,θ κ − μ\u000f(v) : \u000f(v) − λ tr(\u000f(v))2\n(4.11)\n2\n2\nΩ\n\u0012\n\u0013\nZ\n1\n2\n=\nDt,θ −μ\u000f(v) : \u000f(v) − λ tr(\u000f(v))\n(4.12)\n2\nΩ\n\u0012\n\u0013\n1\n2\n+ (∇ · θ) κ − μ\u000f(v) : \u000f(v) − λ tr(\u000f(v))\n2\nwhere we used Dt,θ κ = 0. We introduce the compact notation Mt = Mθ (·, t) for the\nmapping and Ωt = Mt Ω = Mθ (Ω, t) for the perturbed domain. Letting ∇t denote the\ngradient on Ωt we have the identity\n−1\n∇t (v ◦ M−1\nt ) ◦ Mt = ∇v(∇Mt )\n\n(4.13)\n\nand thus \u000f(v) can be parametrized by t as\n\u0001\n1\n−1 T\nT\n∇t (v ◦ M−1\n◦ Mt\nt ) + (v ◦ Mt ) ∇t v\n2\n\u0001\n1\n∇v(∇Mt )−1 + (∇Mt )−T ∇v T\n=\n2\n\n\u000ft (v) =\n\n(4.14)\n(4.15)\n\nUsing that\nDt,θ ∇v(∇Mt )−1 = ∇vDt,θ (∇Mt )−1 = −∇v∇θ\n\n(4.16)\n\nwe obtain\n\u0001\n1\nT\n−T\n∇v\n∇v∇M−1\n+\n∇M\nt\nt\n2\n\u0001\n1\n= − ∇v∇θ + ∇θT ∇v T\n2\n= −\u000fθ (v)\n\nDt,θ \u000ft (v) = Dt,θ\n\n13\n\n(4.17)\n(4.18)\n(4.19)\n\nand as a result\n\u0012\n\u0013\n1\n2\nDt,θ −μ\u000f(v) : \u000f(v) − λ tr(\u000f(v)) = 2μ\u000fθ (v) : \u000f(v) + λ tr(\u000fθ (v)) tr(\u000f(v))\n2\n\n(4.20)\n\nwhich concludes the proof by setting v = u.\n\n4.3\n\nFinite Element Approximation of the Shape Derivative\n\nWe compute a discrete approximation to the shape derivative by inserting the cut finite\nelement approximation uh to (2.6), defined by (3.14), into (4.8). This yields the following\nexpression for the shape derivative approximation\nZ\n2μ(\u000fθ (uh ) : \u000f(uh )) + λtr(\u000fθ (uh ))tr(\u000f(uh ))\n(4.21)\n∂Ω,θ L(Ω; uh , uh ) =\nΩ\n\u0010\n\u0011\n1\n+ (∇ · θ) κ − μ(\u000f(uh ) : \u000f(uh )) − λ(∇ · uh )(∇ · uh )\n2\n\n5\n\nDomain Evolution\n\nTo construct a robust method for evolving the domain we need the discrete level-set\nfunction φ ∈ Wh/k to be a good approximation to a signed distance function, at least\nclose to the boundary, i.e.,\n(\nρ(x, ∂Ω), x 6∈ Ω\nφ(x) ≈\n(5.1)\n−ρ(x, ∂Ω), x ∈ Ω\nwhere ρ(x, ∂Ω) is the smallest Euclidean distance between the point x and the boundary\n∂Ω. Note that a property of a signed distance function φ is that |∇φ| = 1. In the\nfollowing Sections we consider the reinitialization of φ to a signed distance function and\nformulate a method to evolve φ using the transport equation\n∂t φ + β · ∇φ = 0\n\n(5.2)\n\nwhere β is a velocity field which we compute based on the shape derivative.\n\n5.1\n\nReinitialization\n\nWe consider so called Elliptic reinitialization to make the level-set to resemble a distance function together with a best approximation L2 projection on the interface. The\nreinitialization is performed in two steps:\n1. On the subdomain given by elements in Kh/k,0 cut by the boundary, i.e.\nΩ∂ = {∪K : K ∩ ∂Ω 6= ∅, K ∈ Kh/k,0 } ,\n14\n\n(5.3)\n\nwe construct the best distance function in L2 sense by solving the problem: find\nφ∂ ∈ Wh/k |Ω∂ such that\n(φ∂ , w)L2 (Ω∂ ) = (φ/|∇φ|, w)L2 (Ω∂ )\n\n∀w ∈ Wh/k |Ω∂\n\n(5.4)\n\n2. On the rest of the domain, i.e. Ω0 \\ Ω∂ , we use an energy minimization technique\nwhere we seek φ ∈ {v ∈ Wh/k : v|Ω∂ = φ∂ } which minimizes\n1\n(1 − |∇φ|, 1 − |∇φ|)L2 (Ω0 )\n2\n\n(5.5)\n\ni.e. makes φ resemble a distance function as closely as possible. The minimization\nproblem is equivalent to solving the non-linear problem: find φ ∈ {v ∈ Wh/k :\nv|Ω∂ = φ∂ } such that\n(∇φ, ∇v)L2 (Ω0 ) = (|∇φ|−1 ∇φ, ∇v)L2 (Ω0 )\n\n∀v ∈ {v ∈ Wh/k : v|Ω∂ = 0}\n\n(5.6)\n\nThis can for example be accomplished by using the fixed point iteration\n(∇φm , ∇v)L2 (Ω0 ) = (|∇φm−1 |−1 ∇φm−1 , ∇v)L2 (Ω0 )\n\n5.2\n\n(5.7)\n\nShape Evolution\n\nComputing the Velocity Field β. Consider the bilinear form\nb(β, θ) = (β, θ)L2 (Ω0 ) + c1 (∇β, ∇θ)L2 (Ω0 )\n\n(5.8)\n\nwhere c1 > 0 is a parameter used for setting the amount of regularization. We want to\nfind the velocity field β that satisfy\n√ min\n\nDΩ,β J(Ω)\n\n(5.9)\n\nb(β,β)=1\n\nThis is equivalent to solving: find β 0 ∈ [Wh/k ]d such that\nb(β 0 , θ) = −DΩ,θ J(Ω)\n\n∀θ ∈ [Wh/k ]d\n\n(5.10)\n\nand set\np\nβ = β 0 / b(β 0 , β 0 )\n\n(5.11)\n\nsee for example [5]. As boundary conditions on β 0 we use\nβ 0 · n = 0 and (I − n ⊗ n)(∇β 0 )n = 0\n\non ∂Ω0\n\nwhere (I − n ⊗ n) is the projection onto the tangential plane of the boundary.\n\n15\n\n(5.12)\n\nEvolving the Level-Set φ. The evolution of the domain Ω over a pseudo-time step\nT is computed by solving the following convection equation\nX\n(∂t φ, v)L2 (Ω0 ) + (β · ∇φ, v)L2 (Ω0 ) + c2\nh2 (J∂nF φK, J∂nF vK)L2 (F ) = 0, t ∈ (0, T ] + t0\nF ∈Fh\n\n(5.13)\nwhere c2 is a stabilization parameter. For time integration we use a Crank–Nicolson\nmethod and the time step T is chosen via the optimization algorithm described in the\nnext section.\n\n5.3\n\nOptimization Algorithm\n\nIn this section we propose an algorithm that solve (2.10) and give a overview of the optimization procedure. To find the descent direction of the boundary we first use sensitivity\nanalysis to compute a discrete shape derivative (4.21). Next we compute a velocity corresponding to the greatest descent direction of shape velocity subject to some regularity\nconstraints (5.9). Finally, we use use the velocity field to evolve the domain by moving the\nlevel-set function (5.13). This procedure is then repeated in the optimization algorithm.\nAlgorithm 1 Optimization algorithm\n1: Compute the velocity field/decent direction βh\n2: if J(Ωt+T ) < J(Ωt ) then\n3:\nT = 2T\n4: else\n5:\nwhile J(Ωt+T ) > J(Ωt ) do\n6:\nT = T /2\n7:\nend while\n8: end if\n9: t = t + T\n10: Reinitialize φh to a distance function on Ωt+T\n11: Go back to 1\n\n6\n\nNumerical Results\n\n6.1\n\nModel Problems\n\nFor our numerical experiments we consider two model problems where we perform shape\noptimization using CutFEM to optimize the following designs with respect to compliance:\n• Cantilever beam under traction load\n• L-shape beam under traction load\n16\n\nThe design domains, boundary conditions and initial states for both these problems are\ndescribed in Figure 6. We assume that the material is linear elastic isotropic with a\nYoung’s modulus E = 104 and a Poisson’s ratio 0.3. The traction load density in both\nproblems is g = [0, −20]T N/m. As objective functional we use compliance (2.20) with a\nmaterial penalty κ = 35.\n\n6.2\n\nImplementation Aspects\n\nParameter Choices. To produce our numerical results we set c1 = 3(h/k)2 in (5.8)\nand c2 = 0.1 in (5.13). Note that h/k in the expression for c1 is the mesh size of the\nlevel-set mesh. We set the penalty parameter γD = 10k 2 (μ + λ) in (3.13) where k is the\npolynomial degree and γj = 10−7 (μ + λ) in (3.12).\nFinite Elements. The CutFEM formulation works independently of the type of H 1 (Ω0 )\nfinite element and in the experiments below we use Lagrange elements of different orders\nk on both triangles and quadrilaterals. However, a limitation with the current level-set\nreinitialization procedure is that it only works on P1 elements and therefore we, as described in Section 3.3, use P1 -iso-Pk finite elements for the level-set representation to give\ngood enough geometry description when using higher order elements.\nDisconnected Domains. As the level-set description allow for topological changes it\nis possible for small parts of the domain to become disjoint. To remedy this we use a\nsimple filtering strategy to remove these disjoint parts which is based on properties of\nthe direct solver. It is however possible to construct other filtering strategies instead, for\nexample based on the connectivity of the stiffness matrix.\n\n6.3\n\nNumerical Experiments\n\nCantilever Beam. For the cantilever beam problem described in Figure 6a we give\nresults on triangles in Figure 7 and on quadrilaterals Figure 8. The plotted meshes\nare those used for representing the solution u while the mesh resolution for the level-set\ndescription of the geometry is constant in all the examples in each figure. Note that while\nthe solutions are symmetric around the horizontal midline we do not impose symmetry\nin the algorithm. We also give an example of the resulting stresses and displacements in\nFigure 7c. We perform 50 iterations for each example.\nL-shape Beam. For the L-shape beam problem described in Figure 6b we give results\non quadratic triangles in Figure 9. Note that in this example we actually have topological\nchanges between the initial and final geometries. We illustrate this in the sequence\npresented in Figure 10. We perform 50 iterations.\n\n17\n\nTraction\n\nu=0\n\n(a) Cantilever beam\n\nu=0\n\nTraction\n\n(b) L-shape beam\nFigure 6: Schematic figures of design domains, boundary conditions and initial states\nused in the two model problems. (a) Cantilever beam: The design domain is a 2 m × 1 m\nrectangle and the traction load density on the right is evenly distributed within ±0.1 m from\nthe horizontal center line. (b) L-shape beam: The design domain is a 2 m × 2 m square with\na 1 m × 1 m square void in the top right corner. The traction load density on the right is\nevenly distributed in the interval [5/16, 1/2] m from the bottom.\n\n18\n\n(a) k = 2, h = 0.025\n\n(b) k = 4, h = 0.05\n\n(c) k = 4, h = 0.05\nFigure 7: (a)–(b) Final geometries for the cantilever beam problem using triangle elements.\nThe mesh size for the level-set geometry description is h/k and kept constant between the\ntwo examples. (c) Visualization of (exaggerated) displacements and von-Mises stresses when\nusing the final geometry in (b).\n\n19\n\n(a) k = 1, h = 0.0125\n\n(b) k = 2, h = 0.025\n\n(c) k = 4, h = 0.05\nFigure 8: Final geometries for the cantilever beam problem using quadrilateral elements.\nThe mesh size for the level-set geometry description is h/k and kept constant between the\nthree examples.\n\n20\n\n(a) k = 2, h = 0.05\nFigure 9: Final geometry for the L-shape beam problem on triangles.\n\n21\n\n(a) Initial state\n\n(b) Iteration 1\n\n(c) Iteration 2\n\n(d) Iteration 3\n\n(e) Iteration 4\n\n(f ) Iteration 5\n\n(g) Iteration 6\n\n(h) Iteration 7\n\n(i) Iteration 8\n\n(j) Iteration 15\n\n(k) Iteration 20\n\n(l) Iteration 40\n\nFigure 10: Sample iteration states in the L-shape beam problem (k = 2, h = 0.05). Note\nthe topology changes occurring when void separations break.\n\n22\n\n7\n\nConclusions\n\nWe developed, implemented, and demonstrated a shape and topology optimization algorithm for the linear elasticity compliance problem based on:\n• A cut finite element method for linear elasticity with higher order polynomials on\ntriangles and quadrilaterals.\n• A piecewise linear or bilinear level-set representation of the boundary. In the case\nof higher order polynomials we use a refined mesh for the level-set representation\nto allow a more flexible and complex geometric variation and utilize the additional\naccuracy of the higher order elements.\n• A Hamilton-Jacobi transport equation to update the geometry with a velocity field\ngiven by the largest descending direction of the shape derivative with a certain\nregularity requirement.\nOur numerical examples demonstrate the performance of the method and show, in particular, that when using higher order elements and a level-set on a refined mesh fine scale\ngeometric features of thickness smaller than the element size can be represented and stable and accurate solutions are produced by the cut finite element method in each of the\niterations.\nDirections for future work include:\n• Fine tuning of the local geometry based on stress measures.\n• More general design constraints.\n• Use of adaptive mesh refinement to enhance local accuracy of the solution and\ngeometry representation.\n\n23\n\nReferences\n[1] G. Allaire, C. Dapogny, and P. Frey. Shape optimization with a level set based mesh\nevolution method. Comput. Methods Appl. Mech. Engrg., 282:22–53, 2014.\n[2] G. Allaire, F. Jouve, and A.-M. Toader. Structural optimization by the level-set\nmethod. In Free boundary problems (Trento, 2002), volume 147 of Internat. Ser.\nNumer. Math., pages 1–15. Birkhäuser, Basel, 2004.\n[3] M. P. Bendsøe and O. Sigmund. Topology optimization. Springer-Verlag, Berlin,\n2003. Theory, methods and applications.\n[4] E. Burman, S. Claus, P. Hansbo, M. G. Larson, and A. Massing. CutFEM: discretizing geometry and partial differential equations. Internat. J. Numer. Methods\nEngrg., 104(7):472–501, 2015.\n[5] E. Burman, D. Elfverson, P. Hansbo, M. G. Larson, and K. Larsson. A cut finite\nelement method for the Bernoulli free boundary value problem. arXiv:1609.02836,\n2016.\n[6] E. Burman and P. Hansbo. Fictitious domain finite element methods using cut\nelements: II. A stabilized Nitsche method. Appl. Numer. Math., 62(4):328–341,\n2012.\n[7] P. W. Christensen and A. Klarbring. An introduction to structural optimization,\nvolume 153 of Solid Mechanics and its Applications. Springer, New York, 2009.\n[8] R. Correa and A. Seeger. Directional derivates in minimax problems. Numer. Funct.\nAnal. Optim., 7(2-3):145–156, 1984/85.\n[9] M. Delfour and J. Zolésio. Shapes and Geometries. Society for Industrial and Applied\nMathematics, second edition, 2011.\n[10] P. Hansbo, M. G. Larson, and K. Larsson. Cut finite element methods for linear\nelasticity problems. Technical report, Umeå University, Dept. Mathematics and\nMathematical Statistics, 2016.\n[11] R. Hiptmair and A. Paganini. Shape optimization by pursuing diffeomorphisms.\nComput. Methods Appl. Math., 15(3):291–305, 2015.\n[12] R. Hiptmair, A. Paganini, and S. Sargheini. Comparison of approximate shape\ngradients. BIT, 55(2):459–485, 2015.\n[13] J. Nitsche. Über ein Variationsprinzip zur Lösung von Dirichlet-Problemen bei\nVerwendung von Teilräumen, die keinen Randbedingungen unterworfen sind. Abh.\nMath. Sem. Univ. Hamburg, 36:9–15, 1971.\n\n24\n\n[14] J. A. Sethian and A. Wiegmann. Structural boundary design via level set and\nimmersed interface methods. J. Comput. Phys., 163(2):489–528, 2000.\n[15] J. Sokolowski and J.-P. Zolesio. Introduction to shape optimization. Springer, 1992.\n[16] M. Y. Wang, X. Wang, and D. Guo. A level set method for structural topology\noptimization. Comput. Methods Appl. Mech. Engrg., 192(1-2):227–246, 2003.\n\n25\n\n","pages":{"startPosition":[0,5000,9996,14997,19995,25000,30001]}},"html":{"comparison":{"identical":{"groupId":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],"source":{"chars":{"startslengths":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},"words":{"starts":[8314,8314,8314,8314,8314,8314,8314,8314,8314,8314,8314,8314,8314,8314,8314,8314,8314,8314,8314,8314,8314,9421,9421,9421,9421,9421,9421,9421,9421,9421,9421,9421,9421,9421,9421,9421,9421,9421,9442,9442,9442,9442,9442,9442,9442,9442,9442,9442,9442,9442,9442,9442,9442,9545,9545,9545,9545,9545,9545,9545,9545,9545,9545,9545,9545,9545,9545,9545,9545,9545,9545,9545,9545,9545,9545,9545,10078,10078,10078,10078,10078,10078,10078,10078,10078,10078,10078,10078,10078,10078,10078,10078,10078,10078,10078,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,11035,13660,13660,13660,13660,13660,13660,13660,13660,13660,13660,13660,13660,13660,13660,13660,13660,13660,13660,13660,13660,13660,14573,14573,14573,14573,14573,14573,14573,14573,14573,14573,14573,14573,14573,14573,14573,14573,14573,14573,14573,14573,14573,14573,14573,15073,15073,15073,15073,15073,15073,15073,15073,15073,15073,15073,15073,15073,15073,15073,15073,15073,15073,15073,15073,15073,15150,15150,15150,15150,15150,15150,15150,15150,15150,15150,15150,15150,15150,15150,15150,15150,15150,15150,15150],"lengths":[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9]}},"suspected":{"chars":{"starts":[2226,2226,2226,2226,2226,2226,2226,2226,2226,2226,2226,2226,2226,2226,2226,2226,2226,2226,2226,2226,2226,2398,2398,2398,2398,2398,2398,2398,2398,2398,2398,2398,2398,2398,2398,2398,2398,2398,2416,2416,2416,2416,2416,2416,2416,2416,2416,2416,2416,2416,2416,2416,2416,2434,2434,2434,2434,2434,2434,2434,2434,2434,2434,2434,2434,2434,2434,2434,2434,2434,2434,2434,2434,2434,2434,2434,2489,2489,2489,2489,2489,2489,2489,2489,2489,2489,2489,2489,2489,2489,2489,2489,2489,2489,2489,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2671,2864,2864,2864,2864,2864,2864,2864,2864,2864,2864,2864,2864,2864,2864,2864,2864,2864,2864,2864,2864,2864,2968,2968,2968,2968,2968,2968,2968,2968,2968,2968,2968,2968,2968,2968,2968,2968,2968,2968,2968,2968,2968,2968,2968,3061,3061,3061,3061,3061,3061,3061,3061,3061,3061,3061,3061,3061,3061,3061,3061,3061,3061,3061,3061,3061,3152,3152,3152,3152,3152,3152,3152,3152,3152,3152,3152,3152,3152,3152,3152,3152,3152,3152,3152],"lengths":[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19]},"words":{"starts":[351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677],"lengths}}},"minorChanges":{"groupId":[],"source":{"chars":{"starts":[],"lengths":[]},"words":{"starts":[],"lengths":[]}},"suspected":{"chars":{"starts":[],"lengths":[]},"words":{"starts":[],"lengths":[]}}},"relatedMeaning":{"groupId":[],"source":{"chars":{"starts":[],"lengths":[]},"words":{"starts":[],"lengths":[]}},"suspected":{"chars":{"starts":[],"lengths":[]},"words":{"starts":[],"lengths":[]}}}}},"version":3}